<#
.SYNOPSIS

Displays a (suggested) date/time which could be used within
filename to make it unique.

.DESCRIPTION

The date/time shown is in the format of:

  yyyy-mm-dd_hh-mi-ss.

This string can be used to form part of a filename when uploading
files to SharePoint. Some files created don't really have unique
filenames, so in order to make them unique, and upload them to
SharePoint for example, the string generated by this program can
be used.

Although SharePoint has been mentioned, the date/time generated
could be used in any situation where a unique filename is required.

No parameters are required or used.

.EXAMPLE

./SharePointString.ps1

.INPUTS

None. No .NET Framework types of objects are used as input.

.OUTPUTS

Sample output

Suggested string to use within a filename could be, 2018-06-23_10-28-10

.NOTES

Additional information about the function or script.
Additional Notes, eg:

File Name    : SharePointString.ps1
Author       : Ian Molloy
Last updated : 2020-08-05T10:34:03

For information regarding this subject (comment-based help),
execute the command:
PS> Get-Help about_comment_based_help

.LINK

about_Comment_Based_Help
http://technet.microsoft.com/en-us/library/dd819489.aspx

WTFM: Writing the Fabulous Manual
http://technet.microsoft.com/en-us/magazine/ff458353.aspx

about_Functions_Advanced_Parameters
http://technet.microsoft.com/en-us/library/hh847743.aspx

Cmdlet Parameter Sets
http://msdn.microsoft.com/en-us/library/windows/desktop/dd878348(v=vs.85).aspx

Date and time format - ISO 8601
https://www.iso.org/iso-8601-date-and-time-format.html

#>

[cmdletbinding()]
Param () #end param

##=============================================
## SCRIPT BODY
## Main routine starts here
##=============================================
Set-StrictMode -Version Latest;
$ErrorActionPreference = "Stop";

Invoke-Command -ScriptBlock {

   Write-Output '';
   Write-Output 'String date/time';
   $dateMask = Get-Date -Format 'dddd, dd MMMM yyyy HH:mm:ss';
   Write-Output ('Today is {0}' -f $dateMask);

   $script = $MyInvocation.MyCommand.Name;
   $scriptPath = Split-Path -Parent -Path $MyInvocation.MyCommand.Definition;
   Write-Output ('Running script {0} in directory {1}' -f $script,$scriptPath);

}

$str = Get-Date -format "yyyy-MM-dd_hh-mm-ss";
Write-Output "`nSuggested string to use within a filename could be, $str`n";

Write-Output "All done now!";
##=============================================
## END OF SCRIPT: SharePointString.ps1
##=============================================

